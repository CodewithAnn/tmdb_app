// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_clean_architechture/test/features/number_treavia/domain/usecase/get_tv_shows_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_clean_architechture/features/core/error/failure.dart'
    as _i5;
import 'package:flutter_clean_architechture/features/number_treavia/domain/entities/movie.dart'
    as _i6;
import 'package:flutter_clean_architechture/features/number_treavia/domain/repositories/movie_repositoreis.dart'
    as _i2;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepositories extends _i1.Mock implements _i2.MovieRepositories {
  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>> getTrendingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrendingMovies,
          [],
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #getTrendingMovies,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
                _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #getTrendingMovies,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>> getTvShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvShows,
          [],
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #getTvShows,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
                _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #getTvShows,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>> searchMovies(
          {required String? query}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [],
          {#query: query},
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #searchMovies,
            [],
            {#query: query},
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
                _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #searchMovies,
            [],
            {#query: query},
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>.value(
                _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Movie>>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, List<_i6.Movie>>>);
}
